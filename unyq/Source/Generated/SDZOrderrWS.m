/*
	SDZOrderrWS.h
	The implementation of properties and methods for the SDZOrderrWS object.
	Generated by SudzC.com
 */
#import "SDZOrderrWS.h"

@implementation SDZOrderrWS
@synthesize _id = __id;
@synthesize iduser = _iduser;
@synthesize type = _type;
@synthesize hub = _hub;
@synthesize patient = _patient;
@synthesize cpo_name = _cpo_name;
@synthesize order_date = _order_date;
@synthesize serial_number = _serial_number;
@synthesize price = _price;
@synthesize status = _status;
@synthesize recept_date = _recept_date;
@synthesize cover = _cover;
@synthesize order_number = _order_number;
@synthesize model = _model;
@synthesize colour1 = _colour1;
@synthesize colour2 = _colour2;
@synthesize colour3 = _colour3;
@synthesize amp_side = _amp_side;
@synthesize top_calf = _top_calf;
@synthesize max_calf = _max_calf;
@synthesize mid_calf = _mid_calf;
@synthesize low_calf = _low_calf;
@synthesize knee_ankle_axis = _knee_ankle_axis;
@synthesize pictures = _pictures;
@synthesize tracking = _tracking;
@synthesize shipping = _shipping;
@synthesize estimated_date = _estimated_date;
@synthesize int_observations = _int_observations;
@synthesize ext_observations = _ext_observations;


-(void)encodeWithCoder:(NSCoder *)encoder{
    [encoder encodeObject:self._id forKey:@"id"];
    [encoder encodeObject:self.iduser forKey:@"iduser"];
    [encoder encodeObject:self.type forKey:@"type"];
    [encoder encodeObject:self.hub forKey:@"hub"];
    [encoder encodeObject:self.patient forKey:@"patient"];
    [encoder encodeObject:self.cpo_name forKey:@"cpo_name"];
    [encoder encodeObject:self.order_date forKey:@"order_date"];
    [encoder encodeObject:self.serial_number forKey:@"serial_number"];
    [encoder encodeObject:self.price forKey:@"price"];
    [encoder encodeObject:self.status forKey:@"status"];
    [encoder encodeObject:self.recept_date forKey:@"recept_date"];
    [encoder encodeObject:self.cover forKey:@"cover"];
    [encoder encodeObject:self.order_number forKey:@"order_number"];
    [encoder encodeObject:self.model forKey:@"model"];
    [encoder encodeObject:self.colour1 forKey:@"colour1"];
    [encoder encodeObject:self.colour2 forKey:@"colour2"];
    [encoder encodeObject:self.colour3 forKey:@"colour3"];
    [encoder encodeObject:self.amp_side forKey:@"amp_side"];
    [encoder encodeObject:self.top_calf forKey:@"top_calf"];
    [encoder encodeObject:self.max_calf forKey:@"max_calf"];
    [encoder encodeObject:self.mid_calf forKey:@"mid_calf"];
    [encoder encodeObject:self.low_calf forKey:@"low_calf"];
    [encoder encodeObject:self.knee_ankle_axis forKey:@"knee_ankle_axis"];
    [encoder encodeObject:self.pictures forKey:@"pictures"];
    [encoder encodeObject:self.tracking forKey:@"tracking"];
    [encoder encodeObject:self.shipping forKey:@"shipping"];
    [encoder encodeObject:self.estimated_date forKey:@"estimated_date"];
    [encoder encodeObject:self.int_observations forKey:@"int_observations"];
    [encoder encodeObject:self.ext_observations forKey:@"ext_observations"];
}

- (id)initWithCoder:(NSCoder *)decoder {
    if (self = [super init]) {
        self._id = [decoder decodeObjectForKey:@"id"];
        self.iduser = [decoder decodeObjectForKey:@"iduser"];
        self.type = [decoder decodeObjectForKey:@"type"];
        self.hub = [decoder decodeObjectForKey:@"hub"];
        self.patient = [decoder decodeObjectForKey:@"patient"];
        self.cpo_name = [decoder decodeObjectForKey:@"cpo_name"];
        self.order_date = [decoder decodeObjectForKey:@"order_date"];
        self.serial_number = [decoder decodeObjectForKey:@"serial_number"];
        self.price = [decoder decodeObjectForKey:@"price"];
        self.status = [decoder decodeObjectForKey:@"status"];
        self.recept_date = [decoder decodeObjectForKey:@"recept_date"];
        self.cover = [decoder decodeObjectForKey:@"cover"];
        self.order_number = [decoder decodeObjectForKey:@"order_number"];
        self.model = [decoder decodeObjectForKey:@"model"];
        self.colour1 = [decoder decodeObjectForKey:@"colour1"];
        self.colour2 = [decoder decodeObjectForKey:@"colour2"];
        self.colour3 = [decoder decodeObjectForKey:@"colour3"];
        self.amp_side = [decoder decodeObjectForKey:@"amp_side"];
        self.top_calf = [decoder decodeObjectForKey:@"top_calf"];
        self.max_calf = [decoder decodeObjectForKey:@"max_calf"];
        self.mid_calf = [decoder decodeObjectForKey:@"mid_calf"];
        self.low_calf = [decoder decodeObjectForKey:@"low_calf"];
        self.knee_ankle_axis = [decoder decodeObjectForKey:@"knee_ankle_axis"];
        self.pictures = [decoder decodeObjectForKey:@"pictures"];
        self.tracking = [decoder decodeObjectForKey:@"tracking"];
        self.shipping = [decoder decodeObjectForKey:@"shipping"];
        self.estimated_date = [decoder decodeObjectForKey:@"estimated_date"];
        self.int_observations = [decoder decodeObjectForKey:@"int_observations"];
        self.ext_observations = [decoder decodeObjectForKey:@"ext_observations"];
    }
    return self;
}



- (id) init
{
    if(self = [super init])
    {
        self._id = @"";
        self.iduser = @"";
        self.type = @"";
        self.hub = @"";
        self.patient = @"";
        self.cpo_name = @"";
        self.order_date = @"";
        self.serial_number = @"";
        self.price = @"";
        self.status = @"";
        self.recept_date = @"";
        self.cover = @"";
        self.order_number = @"";
        self.model = @"";
        self.colour1 = @"";
        self.colour2 = @"";
        self.colour3 = @"";
        self.amp_side = @"";
        self.top_calf = @"";
        self.max_calf = @"";
        self.mid_calf = @"";
        self.low_calf = @"";
        self.knee_ankle_axis = @"";
        self.pictures = @"";
        self.tracking = @"";
        self.shipping = @"";
        self.estimated_date = @"";
        self.int_observations = @"";
        self.ext_observations = @"";
        
    }
    return self;
}

+ (SDZOrderrWS*) createWithNode: (CXMLNode*) node
{
    if(node == nil) { return nil; }
    return [[self alloc] initWithNode: node];
}

- (id) initWithNode: (CXMLNode*) node {
    if(self = [super initWithNode: node])
    {
        self._id = [Soap getNodeValue: node withName: @"id"];
        self.iduser = [Soap getNodeValue: node withName: @"iduser"];
        self.type = [Soap getNodeValue: node withName: @"type"];
        self.hub = [Soap getNodeValue: node withName: @"hub"];
        self.patient = [Soap getNodeValue: node withName: @"patient"];
        self.cpo_name = [Soap getNodeValue: node withName: @"cpo_name"];
        self.order_date = [Soap getNodeValue: node withName: @"order_date"];
        self.serial_number = [Soap getNodeValue: node withName: @"serial_number"];
        self.price = [Soap getNodeValue: node withName: @"price"];
        self.status = [Soap getNodeValue: node withName: @"status"];
        self.recept_date = [Soap getNodeValue: node withName: @"recept_date"];
        self.cover = [Soap getNodeValue: node withName: @"cover"];
        self.order_number = [Soap getNodeValue: node withName: @"order_number"];
        self.model = [Soap getNodeValue: node withName: @"model"];
        self.colour1 = [Soap getNodeValue: node withName: @"colour1"];
        self.colour2 = [Soap getNodeValue: node withName: @"colour2"];
        self.colour3 = [Soap getNodeValue: node withName: @"colour3"];
        self.amp_side = [Soap getNodeValue: node withName: @"amp_side"];
        self.top_calf = [Soap getNodeValue: node withName: @"top_calf"];
        self.max_calf = [Soap getNodeValue: node withName: @"max_calf"];
        self.mid_calf = [Soap getNodeValue: node withName: @"mid_calf"];
        self.low_calf = [Soap getNodeValue: node withName: @"low_calf"];
        self.knee_ankle_axis = [Soap getNodeValue: node withName: @"knee_ankle_axis"];
        self.pictures = [Soap getNodeValue: node withName: @"pictures"];
        self.tracking = [Soap getNodeValue: node withName: @"tracking"];
        self.shipping = [Soap getNodeValue: node withName: @"shipping"];
        self.estimated_date = [Soap getNodeValue: node withName: @"estimated_date"];
        self.int_observations = [Soap getNodeValue: node withName: @"int_observations"];
        self.ext_observations = [Soap getNodeValue: node withName: @"ext_observations"];
    }
    return self;
}

- (NSMutableString*) serialize
{
    return [self serialize: @"OrderrWS"];
}

- (NSMutableString*) serialize: (NSString*) nodeName
{
    NSMutableString* s = [NSMutableString string];
    [s appendFormat: @"<%@", nodeName];
    [s appendString: [self serializeAttributes]];
    [s appendString: @">"];
    [s appendString: [self serializeElements]];
    [s appendFormat: @"</%@>", nodeName];
    return s;
}

- (NSMutableString*) serializeElements
{
    NSMutableString* s = [super serializeElements];
    if (self._id != nil) [s appendFormat: @"<id>%@</id>", [[self._id stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.iduser != nil) [s appendFormat: @"<iduser>%@</iduser>", [[self.iduser stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.type != nil) [s appendFormat: @"<type>%@</type>", [[self.type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.hub != nil) [s appendFormat: @"<hub>%@</hub>", [[self.hub stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.patient != nil) [s appendFormat: @"<patient>%@</patient>", [[self.patient stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.cpo_name != nil) [s appendFormat: @"<cpo_name>%@</cpo_name>", [[self.cpo_name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.order_date != nil) [s appendFormat: @"<order_date>%@</order_date>", [[self.order_date stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.serial_number != nil) [s appendFormat: @"<serial_number>%@</serial_number>", [[self.serial_number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.price != nil) [s appendFormat: @"<price>%@</price>", [[self.price stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.status != nil) [s appendFormat: @"<status>%@</status>", [[self.status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.recept_date != nil) [s appendFormat: @"<recept_date>%@</recept_date>", [[self.recept_date stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.cover != nil) [s appendFormat: @"<cover>%@</cover>", [[self.cover stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.order_number != nil) [s appendFormat: @"<order_number>%@</order_number>", [[self.order_number stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.model != nil) [s appendFormat: @"<model>%@</model>", [[self.model stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.colour1 != nil) [s appendFormat: @"<colour1>%@</colour1>", [[self.colour1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.colour2 != nil) [s appendFormat: @"<colour2>%@</colour2>", [[self.colour2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.colour3 != nil) [s appendFormat: @"<colour3>%@</colour3>", [[self.colour3 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.amp_side != nil) [s appendFormat: @"<amp_side>%@</amp_side>", [[self.amp_side stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.top_calf != nil) [s appendFormat: @"<top_calf>%@</top_calf>", [[self.top_calf stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.max_calf != nil) [s appendFormat: @"<max_calf>%@</max_calf>", [[self.max_calf stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.mid_calf != nil) [s appendFormat: @"<mid_calf>%@</mid_calf>", [[self.mid_calf stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.low_calf != nil) [s appendFormat: @"<low_calf>%@</low_calf>", [[self.low_calf stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.knee_ankle_axis != nil) [s appendFormat: @"<knee_ankle_axis>%@</knee_ankle_axis>", [[self.knee_ankle_axis stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.pictures != nil) [s appendFormat: @"<pictures>%@</pictures>", [[self.pictures stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.tracking != nil) [s appendFormat: @"<tracking>%@</tracking>", [[self.tracking stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.shipping != nil) [s appendFormat: @"<shipping>%@</shipping>", [[self.shipping stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.estimated_date != nil) [s appendFormat: @"<estimated_date>%@</estimated_date>", [[self.estimated_date stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.int_observations != nil) [s appendFormat: @"<int_observations>%@</int_observations>", [[self.int_observations stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    if (self.ext_observations != nil) [s appendFormat: @"<ext_observations>%@</ext_observations>", [[self.ext_observations stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
    
    return s;
}

- (NSMutableString*) serializeAttributes
{
    NSMutableString* s = [super serializeAttributes];
    
    return s;
}

-(BOOL)isEqual:(id)object{
    if(object != nil && [object isKindOfClass:[SDZOrderrWS class]]) {
        return [[self serialize] isEqualToString:[object serialize]];
    }
    return NO;
}

-(NSUInteger)hash{
    return [Soap generateHash:self];
    
}

@end
